const User = require("../../../models/user");
const {Telegraf} = require("telegraf");
const bot = new Telegraf(process.env.BOT_TOKEN);

async function handleRank(ctx) {
    try {
        // –£—Å–ª–æ–≤–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞
        const conditions = `
üìà –†–µ–π—Ç–∏–Ω–≥ Arcadia Cycling Club
- –ó–∞ –∫–∞–∂–¥–æ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 1 –ø–∏–∫—Å–µ–ª—å
- –ü–∏–∫—Å–µ–ª–∏ –º–æ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ –º–µ—Ä—á
- –ß–µ–º –±–æ–ª—å—à–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, —Ç–µ–º –≤—ã—à–µ –≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥

–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –ø–∏–∫—Å–µ–ª—è–º
`;

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ —É–±—ã–≤–∞–Ω–∏—é –ø–∏–∫—Å–µ–ª–µ–π
        const users = await User.find({ pixels: { $gt: 0 } }) // –¢–æ–ª—å–∫–æ —Å –ø–∏–∫—Å–µ–ª—è–º–∏ > 0
            .sort({ pixels: -1 }) // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
            .limit(10); // –¢–æ–ø-10 (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å)

        if (!users.length) {
            return ctx.reply(`${conditions}–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞—Ä–∞–±–æ—Ç–∞–ª –ø–∏–∫—Å–µ–ª–∏. –ü–æ—Å–µ—â–∞–π—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏!`, { parse_mode: 'Markdown' });
        }

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É —Ä–µ–π—Ç–∏–Ω–≥–∞
        const rankingTable = users.map((user, index) => {
            const position = index + 1;
            return `${position}. ${user.username || user.telegramId} ‚Äî ${user.pixels} –ø–∏–∫—Å–µ–ª–µ–π`;
        }).join('\n');

        // –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        const fullMessage = `${conditions}${rankingTable}`;
        console.log('Sending message:', fullMessage); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

        await bot.telegram.sendMessage(
            ctx.chat.id, // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç
            fullMessage
        );
    } catch (err) {
        console.error('Failed to fetch ranking:', err);
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ–π—Ç–∏–Ω–≥–∞.');
    }
}

module.exports = handleRank;